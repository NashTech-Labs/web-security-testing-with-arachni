name: Security Testing

on:
  # push:
  #   branches:
  #     -master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      url:
        description: 'The URL of the website to scan'
        required: false
        default: 'http://localhost:3000'

jobs:
  security-test:
    runs-on: ubuntu-latest

    env:
      DEFAULT_URL: 'http://localhost:3000'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: github.event.inputs.url == env.DEFAULT_URL

      - name: Pull Juice Shop Docker image
        run: docker pull bkimminich/juice-shop
        if: github.event.inputs.url == env.DEFAULT_URL

      - name: Run Juice Shop container
        run: docker run -d --name juice-shop -p 3000:3000 bkimminich/juice-shop
        if: github.event.inputs.url == env.DEFAULT_URL

      - name: Get Juice Shop container IP
        id: get-ip
        run: |
          CONTAINER_ID=$(docker ps -qf "name=juice-shop")
          CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINER_ID)
          echo "CONTAINER_IP=${CONTAINER_IP}" >> $GITHUB_ENV
        if: github.event.inputs.url == env.DEFAULT_URL

      - name: Wait for Juice Shop to be ready
        run: |
          until curl -s http://${{ env.CONTAINER_IP }}:3000 > /dev/null; do
            echo "Waiting for Juice Shop to be ready..."
            sleep 5
          done
        if: github.event.inputs.url == env.DEFAULT_URL

      - name: Download Arachni
        run: |
          wget https://github.com/Arachni/arachni/releases/download/v1.5.1/arachni-1.5.1-0.5.12-linux-x86_64.tar.gz
          tar -xvf arachni-1.5.1-0.5.12-linux-x86_64.tar.gz

      - name: Run Arachni scan
        run: |
          URL="${{ github.event.inputs.url }}"
          if [ "$URL" = "${{ env.DEFAULT_URL }}" ]; then
            URL="http://${{ env.CONTAINER_IP }}:3000"
          fi
          echo "Using URL: $URL"
          arachni-1.5.1-0.5.12/bin/arachni $URL --report-save-path=arachni-1.5.1-0.5.12/bin/output.afr
          mkdir -p arachni-1.5.1-0.5.12/bin/output-html
          arachni-1.5.1-0.5.12/bin/arachni_reporter arachni-1.5.1-0.5.12/bin/output.afr --reporter=html:outfile=arachni-1.5.1-0.5.12/bin/output-html

      - name: List Arachni output directory after scan
        run: |
          ls -al arachni-1.5.1-0.5.12/bin/output-html

      - name: Upload Arachni HTML report
        uses: actions/upload-artifact@v4
        with:
          name: arachni-html-report
          path: arachni-1.5.1-0.5.12/bin/output-html
          if-no-files-found: warn
